// Begin Residential

// Houses
item(FEAT_HOUSES, item_houses, 26, HOUSE_SIZE_1X1){
	property {
		substitute				:26;
		name					:string(STR_NAME_HOUSES);
		override				:26;
		population				:13;
		mail_multiplier			:(improved_mail == 1) ? 1 : 8;
		accepted_cargos			:[[PASS, 3],[MAIL, 1]];
		local_authority_impact	:75;
		removal_cost_multiplier	:71;
		probability				:4;
		years_available			:[1945,9999];
		minimum_lifetime		:2;
		availability_mask		:[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class			:0;
		
		// Override all default houses
		override:00;override:01;override:02;override:03;override:04;override:05;override:06;override:09;override:10;override:11;override:12;override:13;override:14;override:15;override:16;override:17;override:18;override:19;override:24;override:25;override:26;override:27;override:28;override:29;override:30;override:31;override:36;override:37;override:38;override:39;override:44;override:45;override:46;override:47;override:48;override:49;override:50;override:51;override:52;override:53;override:54;override:55;override:56;override:57;override:58;override:59;override:60;override:61;override:62;override:63;override:64;override:65;override:70;override:71;override:72;override:73;override:78;override:79;override:80;override:81;override:82;override:83;override:84;override:85;override:86;override:89;override:90;override:91;override:92;override:93;override:94;override:95;override:96;override:97;override:98;override:101;override:102;
		}
	graphics {
		default					:house_sprite_sloped;
		construction_check		:townhouse_office_space_1;
	}
}

item(FEAT_HOUSES, item_houses_old, 108, HOUSE_SIZE_1X1){
	property {
		substitute				:26;
		name					:string(STR_NAME_HOUSES);
		override				:26;
		population				:13;
		mail_multiplier			:(improved_mail == 1) ? 1 : 8;
		accepted_cargos			:[[PASS, 3],[MAIL, 1],[COAL, 1]];
		local_authority_impact	:75;
		removal_cost_multiplier	:71;
		probability				:4;
		years_available			:[1850,1950];
		minimum_lifetime		:1;
		availability_mask		:[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class			:0;
		}
	graphics {
		default					:house_sprite_sloped;
		
	}
}

// Townhouses
item(FEAT_HOUSES, item_townhouses, 06, HOUSE_SIZE_1X1){
	property {
		substitute				:06;
		name					:string(STR_NAME_TOWNHOUSES);
		override				:06;
		population				:30;
		mail_multiplier			:(improved_mail == 1) ? 1 : 12;
		accepted_cargos			:[[PASS, 4],[MAIL, 2]];
		local_authority_impact	:80;
		removal_cost_multiplier	:80;
		probability				:1;
		years_available			:[1945,9999];
		minimum_lifetime		:2;
		availability_mask		:[bitmask(TOWNZONE_INNER_SUBURB,TOWNZONE_CENTRE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		}
	graphics {
		default					:random_sprite_townhouses;
		construction_check		:townhouse_office_space_1;
	}
}

item(FEAT_HOUSES, item_townhouses_old, 109, HOUSE_SIZE_1X1){
	property {
		substitute				:06;
		name					:string(STR_NAME_TOWNHOUSES);
		override				:06;
		population				:30;
		mail_multiplier			:(improved_mail == 1) ? 1 : 12;
		accepted_cargos			:[[PASS, 4],[MAIL, 2],[COAL, 2]];
		local_authority_impact	:80;
		removal_cost_multiplier	:80;
		probability				:1;
		years_available			:[1850,1950];
		minimum_lifetime		:2;
		availability_mask		:[bitmask(TOWNZONE_INNER_SUBURB,TOWNZONE_CENTRE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		}
	graphics {
		default					:random_sprite_townhouses;
		
	}
}

// Flats
item(FEAT_HOUSES, item_flats, 27, HOUSE_SIZE_1X1){
	property {
		substitute				:27;
		name					:string(STR_NAME_FLATS);
		override				:27;
		population				:100;
		mail_multiplier			:(improved_mail == 1) ? 3 : 35;
		accepted_cargos			:[[PASS, 8],[MAIL, 2]];
		local_authority_impact	:100;
		removal_cost_multiplier	:135;
		probability				:1;
		years_available			:[1945,9999];
		minimum_lifetime		:5;
		availability_mask		:[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		}
	graphics {
		default					:random_sprite_flats;
		construction_check		:pass_service_check;
	}
}

// Small Flats
item(FEAT_HOUSES, item_small_flats, 02, HOUSE_SIZE_1X1){
	property {
		substitute				:02;
		name					:string(STR_NAME_SMALL_FLATS);
		override				:02;
		population				:40;
		mail_multiplier			:(improved_mail == 1) ? 2 : 20;
		accepted_cargos			:[[PASS, 8],[MAIL, 3]];
		local_authority_impact	:90;
		removal_cost_multiplier	:100;
		probability				:1;
		years_available			:[1945,9999];
		minimum_lifetime		:4;
		availability_mask		:[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		}
	graphics {
		default					:random_sprite_small_flats;
		construction_check		:flats_office_space_1;
	}
}

item(FEAT_HOUSES, item_cottages, 25, HOUSE_SIZE_1X1) {
	property {
		substitute				:25;
		name					:string(STR_NAME_COTTAGES);
		override				:25;
		population				:12;
		mail_multiplier			:(improved_mail == 1) ? 1 : 7;
		accepted_cargos			:[[PASS, 2],[MAIL, 2],[COAL, 1],[WOOD, 1]];
		local_authority_impact	:60;
		removal_cost_multiplier	:60;
		probability				:1;
		years_available			:[1700,1900];
		minimum_lifetime		:2;
		availability_mask		:[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class			:4;
	}
	graphics {
		default					:sprite_cottages;
		
	}
}

item(FEAT_HOUSES, item_old_houses, 24, HOUSE_SIZE_1X1) {
	property {
		substitute				:24;
		name					:string(STR_NAME_HOUSES);
		override				:24;
		population				:15;
		mail_multiplier			:(improved_mail == 1) ? 1 : 6;
		accepted_cargos			:[[PASS, 2],[MAIL, 2],[COAL, 2],[WOOD, 2]];
		local_authority_impact	:75;
		removal_cost_multiplier	:70;
		probability				:1;
		years_available			:[1700,1880];
		minimum_lifetime		:2;
		availability_mask		:[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class			:4;
	}
	graphics {
		default					:random_sprite_old_houses;
		
	}
}

// End Residential
